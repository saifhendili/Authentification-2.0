{"ast":null,"code":"import axios from 'axios';\nimport { SetAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_PROFILE, LOGOUT } from '../Constants/Types';\nimport setAuthToken from '../utils/setAuthToken';\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post('/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(SetAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(SetAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout / Clear Profile\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","SetAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_PROFILE","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["C:/Users/SaifHendili/Desktop/freelance/Mouseion-app/Mouseion-app/frontend/src/Redux/Actions/auth.js"],"sourcesContent":["import axios from 'axios';\nimport { SetAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  CLEAR_PROFILE,\n  LOGOUT,\n\n} from '../Constants/Types';\nimport setAuthToken from '../utils/setAuthToken';\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const register = ({\n  name,\n      email,\n      password,\n}) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n  });\n  try {\n    const res = await axios.post('/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(SetAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(SetAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout / Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}